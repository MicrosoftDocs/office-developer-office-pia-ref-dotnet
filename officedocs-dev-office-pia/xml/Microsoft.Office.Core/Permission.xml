<Type Name="Permission" FullName="Microsoft.Office.Core.Permission">
  <TypeSignature Language="C++ CLI" Value="public interface class Permission : Microsoft::Office::Core::_IMsoDispObj, System::Collections::IEnumerable" />
  <TypeSignature Language="C#" Value="public interface Permission : Microsoft.Office.Core._IMsoDispObj, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Permission implements class Microsoft.Office.Core._IMsoDispObj, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core.Permission" />
  <TypeSignature Language="VB.NET" Value="Public Interface Permission&#xA;Implements _IMsoDispObj, IEnumerable" />
  <TypeSignature Language="F#" Value="type Permission = interface&#xA;    interface _IMsoDispObj&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("000C0376-0000-0000-C000-000000000046")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("000C0376-0000-0000-C000-000000000046")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.TypeLibType(4288)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.TypeLibType(4288)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Use the <b>Permission</b> object to restrict permissions to the active document and to return or set specific permissions settings.</summary>
    <remarks>
      <para>The <b>Permission</b> property of the Microsoft Office Word 2003 <b>Document</b> object, the Microsoft Office Excel 2003 <b>Workbook</b> object, and the Microsoft Office PowerPoint 2003 <b>Presentation</b> object returns a <b>Permission</b> object.</para>
      <para>Use the <see cref="P:Microsoft.Office.Core.Permission.Enabled" /> property to determine whether permissions are restricted on the active document. Use the <see cref="P:Microsoft.Office.Core.Permission.Count" /> property to return the number of users with permissions and the <see cref="M:Microsoft.Office.Core.Permission.RemoveAll" /> method to reset all existing permissions.</para>
      <para>The <see cref="P:Microsoft.Office.Core.Permission.DocumentAuthor" />, <see cref="P:Microsoft.Office.Core.Permission.EnableTrustedBrowser" />, <see cref="P:Microsoft.Office.Core.Permission.RequestPermissionURL" />, and <see cref="P:Microsoft.Office.Core.Permission.StoreLicenses" /> properties provide additional information about permissions settings.</para>
      <para>The <b>Permission</b> object gives access to a collection of <see cref="T:Microsoft.Office.Core.UserPermission" /> objects. Use the <b>UserPermission</b> object to associate specific sets of rights with individual users. While some permissions granted through the user interface (such as <b>msoPermissionPrint</b>) apply to all users, you can use the <b>UserPermission</b> object to assign them on a per-user basis with per-user expiration dates.</para>
      <para>Microsoft Office Information Rights Management supports the use of administrative permission policies which list users and groups and their document permissions. Use the <see cref="M:Microsoft.Office.Core.Permission.ApplyPolicy(System.String)" /> method to apply a permission policy and the <see cref="P:Microsoft.Office.Core.Permission.PermissionFromPolicy" />, <see cref="P:Microsoft.Office.Core.Permission.PolicyName" />, and <see cref="P:Microsoft.Office.Core.Permission.PolicyDescription" /> properties to return policy information.</para>
      <para>The <b>Permission</b> object model is available regardless of whether permissions are restricted on the active document. The <b>Permission</b> property of the <b>Document</b>, <b>Workbook</b>, and <b>Presentation</b> objects does not return <b>Nothing</b> when the active document does not have restricted permissions. Use the <b>Enabled</b> property to determine whether a document has restricted permissions.</para>
      <para>Use of the <b>Permission</b> object raises an error when the Windows Rights Management client is not installed.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.UserPermission Add (string UserId, object Permission, object ExpirationDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.UserPermission Add([in]string UserId, [in]object Permission, [in]object ExpirationDate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.Permission.Add(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (UserId As String, Optional Permission As Object, Optional ExpirationDate As Object) As UserPermission" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * obj -&gt; Microsoft.Office.Core.UserPermission" Usage="permission.Add (UserId, Permission, ExpirationDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(3)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(3)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.UserPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UserId" Type="System.String" />
        <Parameter Name="Permission" Type="System.Object" />
        <Parameter Name="ExpirationDate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="UserId">Optional <b>Object</b>. The email address (in the format <paramref name="user@domain.com" />) of the user to whom permissions on the active document are being granted.</param>
        <param name="Permission">Optional <b>String</b>. The permissions on the active document that are being granted to the specified user.</param>
        <param name="ExpirationDate">Required <b>String</b>. The expiration date for the permissions that are being granted.NoteThis parameter is not used and will be ignored.</param>
        <summary>Creates a new set of permissions on the active document for the specified user.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="F#" Value="member this.Application : obj" Usage="Microsoft.Office.Core.Permission.Application" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610743808)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610743808)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(1610743808)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(1610743808)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an <b>Application</b> object that represents the container application for the object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPolicy">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyPolicy(System::String ^ FileName);" />
      <MemberSignature Language="C#" Value="public void ApplyPolicy (string FileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyPolicy([in]string FileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.Permission.ApplyPolicy(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPolicy (FileName As String)" />
      <MemberSignature Language="F#" Value="abstract member ApplyPolicy : string -&gt; unit" Usage="permission.ApplyPolicy FileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(4)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(4)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="FileName">Required <b>String</b>. The path and filename of the permission policy template file.</param>
        <summary>Applies the specified permission policy to the active document.</summary>
        <remarks>
          <para>Microsoft Office Information Rights Management supports the use of administrative permission policies which list users and groups and their document permissions. The <b>ApplyPolicy</b> method applies a permission policy to the active document.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.Core.Permission.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an <b>Integer</b> indicating the number of items in the specified collection.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns 0 (zero) if permissions are not enabled on the active document. When permissions are enabled, the <b>Count</b> property always returns at least 1, representing the permissions of the document author.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Core.Permission.Creator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610743809)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610743809)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(1610743809)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(1610743809)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a 32-bit integer that indicates the application in which the specified object was created.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If the specified object was created in Microsoft Word, this property returns 1297307460, which represents the string MSWD; if created in Microsoft Excel, this property returns 1480803660. This value can also be represented by the constant <b>wdCreatorCode</b> in Word, or <b>xlCreatorCode</b> in Excel.</para>
          <para>The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code. For example, Microsoft Word has the creator code MSWD. For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</para>
          <para>The <b>Creator</b> property always returns the numeric identifier for the active application, just as the <see cref="P:Microsoft.Office.Core.Permission.Application" /> property always returns the name of the active application in string form. Use the <b>CreatedBy</b> property of the <see cref="T:Microsoft.Office.Core.SharedWorkspaceFile" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceFolder" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceLink" />, and <see cref="T:Microsoft.Office.Core.SharedWorkspaceTask" /> objects to return the name of the individual who created those objects. Use document properties to return information about the authors of Office documents.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentAuthor">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentAuthor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string DocumentAuthor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentAuthor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.DocumentAuthor" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentAuthor As String" />
      <MemberSignature Language="F#" Value="member this.DocumentAuthor : string with get, set" Usage="Microsoft.Office.Core.Permission.DocumentAuthor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(12)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(12)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(12)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(12)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.InteropServices.DispId(12)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.InteropServices.DispId(12)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets the name in email form of the author of the active document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <b>DocumentAuthor</b> property returns or sets the author of the active document. The author always has non-expiring owner rights to the document, whether owner permission is granted explicitly (through a <see cref="T:Microsoft.Office.Core.UserPermission" /> object) or not.</para>
          <para>The <b>DocumentAuthor</b> property can only be changed to a different account that has been certified through the permissions user interface to open restricted content on the local machine. In most cases, users who have a single Windows account can only choose between their Windows and their Passport identities.</para>
          <para>If the user's Microsoft Windows and Passport identities use the same email address, use the format passport:someone@example.com to specify the Passport identity as the <b>DocumentAuthor</b> property.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="Microsoft.Office.Core.Permission.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(7)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(7)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(7)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(7)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.InteropServices.DispId(7)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.InteropServices.DispId(7)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets a <b>Boolean</b> value that indicates whether permissions are enabled on the active document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Use the <b>Enabled</b> property to determine whether permissions are restricted on the active document, and to enable or disable permissions. Set <b>Enabled</b> to <b>False</b> to disable permissions and to remove all users, other than the document author, and their permissions.</para>
          <para>When permissions are disabled, the <see cref="P:Microsoft.Office.Core.Permission.Count" /> property of the <see cref="T:Microsoft.Office.Core.Permission" /> object returns 0 (zero); however, when permissions are re-enabled, the permissions of the document author remain intact.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTrustedBrowser">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTrustedBrowser { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool EnableTrustedBrowser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTrustedBrowser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.EnableTrustedBrowser" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTrustedBrowser As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableTrustedBrowser : bool with get, set" Usage="Microsoft.Office.Core.Permission.EnableTrustedBrowser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.InteropServices.DispId(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.InteropServices.DispId(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets the option that allows a user to view a document with restricted permissions in a web browser if the user does not have the appropriate client application installed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The default return value is <b>False</b>.</para>
          <para>The <b>EnableTrustedBrowser</b> property, when <b>True</b>, allows a user who tries to open an Office Word 2003 document with restricted permissions, for example, but who does not have the Office Word 2003 application installed, to view the document in Microsoft Internet Explorer or another browser that supports this functionality. This property corresponds to the checkbox Allow users with earlier versions of Office to read with browsers supporting Information Rights Management. (Increases file size.) in the user interface.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.Permission.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="permission.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-4)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-4)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.TypeLibFunc(1024)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.TypeLibFunc(1024)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::UserPermission ^ default[System::Object ^] { Microsoft::Office::Core::UserPermission ^ get(System::Object ^ Index); };" />
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.UserPermission this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.UserPermission Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As UserPermission" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : Microsoft.Office.Core.UserPermission" Usage="Microsoft.Office.Core.Permission.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.UserPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Optional <b>Object</b>. The numeric index of the <b>UserPermission</b> in the <b>Permission</b> collection, or the email address of the user whose set of permissions on the active document is to be returned.</param>
        <summary>Returns a <see cref="T:Microsoft.Office.Core.UserPermission" /> object that is a member of the <see cref="T:Microsoft.Office.Core.Permission" /> collection.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <b>UserPermission</b> object associates a set of permissions on the active document with a single user and an optional expiration date.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Core.Permission.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(5)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(5)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(5)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(5)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <b>Parent</b> object for the specified object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionFromPolicy">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PermissionFromPolicy { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool PermissionFromPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PermissionFromPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.PermissionFromPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PermissionFromPolicy As Boolean" />
      <MemberSignature Language="F#" Value="member this.PermissionFromPolicy : bool" Usage="Microsoft.Office.Core.Permission.PermissionFromPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(13)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(13)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(13)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(13)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <b>Boolean</b> value that indicates whether a permission policy has been applied to the active document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Microsoft Office 2003 Information Rights Management supports the use of administrative permission policies which list users and groups and their document permissions. The <b>PermissionFromPolicy</b> property returns a <b>Boolean</b> value that indicates whether a permission policy was applied to the active document the last time permissions were enabled on the document.</para>
          <para>The <b>PermissionFromPolicy </b>property always returns <b>False</b> when checked by a non-owner of the document, even when the user has object model permissions.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyDescription">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PolicyDescription { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string PolicyDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PolicyDescription" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.PolicyDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PolicyDescription As String" />
      <MemberSignature Language="F#" Value="member this.PolicyDescription : string" Usage="Microsoft.Office.Core.Permission.PolicyDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(10)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(10)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(10)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(10)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the description of the permissions policy applied to the active document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Microsoft Office Information Rights Management supports the use of administrative permission policies which list users and groups and their document permissions. The <b>PolicyDescription</b> property returns the description of the policy applied to the active document, or a default value if a policy was not used.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyName">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PolicyName { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string PolicyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PolicyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.PolicyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PolicyName As String" />
      <MemberSignature Language="F#" Value="member this.PolicyName : string" Usage="Microsoft.Office.Core.Permission.PolicyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(9)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(9)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(9)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(9)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the permissions policy applied to the active document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Microsoft Office Information Rights Management supports the use of administrative permission policies which list users and groups and their document permissions. The <b>PolicyName</b> property returns the name of the policy applied to the active document, or a default value if a policy was not used.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.Permission.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : unit -&gt; unit" Usage="permission.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(6)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(6)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all <see cref="T:Microsoft.Office.Core.UserPermission" /> objects from the <see cref="T:Microsoft.Office.Core.Permission" /> collection of the active document and disables restrictions on the active document.</summary>
        <remarks>
          <para>After calling the <b>RemoveAll</b> method, the <see cref="P:Microsoft.Office.Core.Permission.Enabled" /> property of the <see cref="T:Microsoft.Office.Core.Permission" /> object returns <b>False</b> and the <see cref="P:Microsoft.Office.Core.Permission.Count" /> property returns 0 (zero).</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPermissionURL">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPermissionURL { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string RequestPermissionURL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPermissionURL" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.RequestPermissionURL" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPermissionURL As String" />
      <MemberSignature Language="F#" Value="member this.RequestPermissionURL : string with get, set" Usage="Microsoft.Office.Core.Permission.RequestPermissionURL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(8)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(8)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(8)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(8)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.InteropServices.DispId(8)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.InteropServices.DispId(8)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets the file or web site URL to visit or the email address to contact for users who need additional permissions on the active document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <b>RequestPermissionURL</b> setting corresponds to the Users can request additional permissions from option in the permissions user interface. Use the <b>RequestPermissionURL</b> property to specify a file, a web site, or an email contact from which users can request, or learn how to request, additional permissions on the active document, for example:</para>
          <list type="bullet">
            <item>
              <para>A web address: http://companyserver/request_permissions.asp</para>
            </item>
            <item>
              <para>A file: \\companyserver\share\requesting_permissions.txt</para>
            </item>
            <item>
              <para>An email address: mailto:permissionsmgr@example.com?Subject=Request%20permissions</para>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreLicenses">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreLicenses { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool StoreLicenses { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreLicenses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Permission.StoreLicenses" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreLicenses As Boolean" />
      <MemberSignature Language="F#" Value="member this.StoreLicenses : bool with get, set" Usage="Microsoft.Office.Core.Permission.StoreLicenses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(11)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(11)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(11)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(11)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.InteropServices.DispId(11)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.InteropServices.DispId(11)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <b>Boolean</b> value that indicates whether the user's license to view the active document should be cached to allow offline viewing when the user cannot connect to a rights management server.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The default return value is <b>True</b>.</para>
          <para>The <b>StoreLicenses</b> property corresponds to (and its value is the opposite of) the Require a connection to verify a user's permission option in the permissions user interface. When <b>StoreLicenses</b> is <b>False</b>, users other than the document owner must connect to the rights management server and acquire the license to work with the document each time they open it.</para>
          <para>When content is protected using the Microsoft Office 2003 Information Rights Management service, the <b>StoreLicenses</b> property is always <b>True</b> and cannot be set to False.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
