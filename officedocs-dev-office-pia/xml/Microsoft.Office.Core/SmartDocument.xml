<Type Name="SmartDocument" FullName="Microsoft.Office.Core.SmartDocument">
  <TypeSignature Language="C#" Value="public interface SmartDocument : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract SmartDocument implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core.SmartDocument" />
  <TypeSignature Language="VB.NET" Value="Public Interface SmartDocument&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class SmartDocument : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C0377-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The <b>SmartDocument</b> property of the Microsoft Office Word 2003 <b>Document</b> object and the Microsoft Office Excel 2003 <b>Workbook</b> object returns a <b>SmartDocument</b> object.</summary>
    <remarks>
      <para>Use the <b>SmartDocument</b> object to manage the XML expansion pack attached to the active document.</para>
      <para>Use the <b>SmartDocument</b> object's <see cref="P:Microsoft.Office.Core.SmartDocument.SolutionID" /> and the <see cref="P:Microsoft.Office.Core.SmartDocument.SolutionURL" /> properties to retrieve information about the XML expansion pack attached to the active document or workbook. Use the <see cref="M:Microsoft.Office.Core.SmartDocument.PickSolution(System.Boolean)" /> method to allow the user to select an available XML expansion pack from a list to attach to the active document or workbook. Use the <see cref="M:Microsoft.Office.Core.SmartDocument.RefreshPane" /> method to refresh the smart document's Document Actions task pane.</para>
      <para>The <b>SmartDocument</b> object model is available whether or not a document has an XML expansion pack attached. The <b>SmartDocument</b> property of the <b>Document</b> or <b>Workbook</b> objects does not return Nothing when the active document has no XML expansion pack attached. Examine the <b>SolutionID</b> property to determine whether the active document has an XML expansion pack attached.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.SmartDocument.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an <b>Application</b> object that represents the container application for the object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.SmartDocument.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a 32-bit integer that indicates the application in which the specified object was created.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If the specified object was created in Microsoft Word, this property returns 1297307460, which represents the string MSWD; if created in Microsoft Excel, this property returns 1480803660. This value can also be represented by the constant <b>wdCreatorCode</b> in Word, or <b>xlCreatorCode</b> in Excel.</para>
          <para>The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code. For example, Microsoft Word has the creator code MSWD. For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</para>
          <para>The <b>Creator</b> property always returns the numeric identifier for the active application, just as the <see cref="P:Microsoft.Office.Core.SmartDocument.Application" /> property always returns the name of the active application in string form. Use the <b>CreatedBy</b> property of the <see cref="T:Microsoft.Office.Core.SharedWorkspaceFile" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceFolder" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceLink" />, and <see cref="T:Microsoft.Office.Core.SharedWorkspaceTask" /> objects to return the name of the individual who created those objects. Use document properties to return information about the authors of Office documents.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PickSolution">
      <MemberSignature Language="C#" Value="public void PickSolution (bool ConsiderAllSchemas = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PickSolution([in]bool ConsiderAllSchemas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.SmartDocument.PickSolution(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PickSolution (Optional ConsiderAllSchemas As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConsiderAllSchemas" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ConsiderAllSchemas">Optional <b>Boolean</b>. <b>True</b> displays all available XML expansion packs installed on the user's computer. <b>False</b> displays only XML expansion packs applicable to the active document. Default value is <b>False</b>.</param>
        <summary>Displays a dialog box which allows the user to choose an available XML expansion pack to attach to the active Microsoft Office Word 2003 document or Microsoft Office Excel 2003 workbook.</summary>
        <remarks>
          <para>Use the <b>PickSolution</b> method to allow the user to select an XML expansion pack from a list. The schema attached to the active document or workbook determines which XML expansion packs are applicable.</para>
          <para>The <b>PickSolution</b> method does not return a value to indicate whether the user selected an XML expansion pack or clicked Cancel in the dialog box. Check the <see cref="P:Microsoft.Office.Core.SmartDocument.SolutionID" /> property after calling <b>PickSolution</b> to determine whether an XML expansion pack has been attached.</para>
          <para>If the smart document developer has failed to specify "targetApplication" in the XML expansion pack manifest file, the list displayed by <b>PickSolution</b> may include XML expansion packs that are not targeted to the active application; for example, an Excel user may see XML expansion packs targeted exclusively to Word. In these circumstances, the user may select an XML expansion pack that is not appropriate for the active application.</para>
          <para>For more information on smart documents or XML expansion packs for smart documents, please see the Smart Document Software Development Kit (SDK) on the Microsoft Developer Network (MSDN) Web site.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshPane">
      <MemberSignature Language="C#" Value="public void RefreshPane ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshPane() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.SmartDocument.RefreshPane" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshPane ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshPane();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Refreshes the Document Actions task pane for the active Microsoft Office Word 2003 document or Microsoft Office Excel 2003 workbook.</summary>
        <remarks>
          <para>The <b>RefreshPane</b> method raises an error if the active document does not have an XML expansion pack attached.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SolutionID">
      <MemberSignature Language="C#" Value="public string SolutionID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SolutionID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.SmartDocument.SolutionID" />
      <MemberSignature Language="VB.NET" Value="Public Property SolutionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SolutionID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets the ID, often a globally unique identifier (GUID), which identifies the XML expansion pack attached to the active Microsoft Office Word 2003 document or Microsoft Office Excel 2003 workbook.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <b>SolutionID</b> property returns an empty string or "None" when no XML expansion pack is attached to the active document.</para>
          <para>Provide appropriate values for the <b>SolutionID</b> and <see cref="P:Microsoft.Office.Core.SmartDocument.SolutionURL" /> properties to attach an available XML expansion pack to the active document to transform it into a smart document without using the <see cref="M:Microsoft.Office.Core.SmartDocument.PickSolution(System.Boolean)" /> method. Set the <b>SolutionID</b> and <b>SolutionURL</b> properties to empty strings to remove the attached XML expansion pack.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SolutionURL">
      <MemberSignature Language="C#" Value="public string SolutionURL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SolutionURL" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.SmartDocument.SolutionURL" />
      <MemberSignature Language="VB.NET" Value="Public Property SolutionURL As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SolutionURL { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns or sets an absolute URL that provides the complete path to the XML expansion pack file attached to the active Microsoft Office Word 2003 document or Microsoft Office Excel 2003 workbook.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <b>SolutionURL</b> property returns an empty string when no XML expansion pack is attached to the active document.</para>
          <para>Provide appropriate values for the <b>SolutionID</b> and <b>SolutionURL</b> properties to attach an available XML expansion pack to the active document and transform it into a smart document without using the <b>PickSolution</b> method. Set the <b>SolutionID</b> and <b>SolutionURL</b> properties to empty strings to remove the attached XML expansion pack</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>