<Type Name="IRibbonExtensibility" FullName="Microsoft.Office.Core.IRibbonExtensibility">
  <TypeSignature Language="C++ CLI" Value="public interface class IRibbonExtensibility" />
  <TypeSignature Language="C#" Value="public interface IRibbonExtensibility" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRibbonExtensibility" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core.IRibbonExtensibility" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRibbonExtensibility" />
  <TypeSignature Language="F#" Value="type IRibbonExtensibility = interface" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("000C0396-0000-0000-C000-000000000046")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("000C0396-0000-0000-C000-000000000046")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.TypeLibType(4160)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.TypeLibType(4160)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The interface through which the Ribbon user interface (UI) communicates with a COM add-in to customize the UI.</summary>
    <remarks>
      <para>The <b>IRibbonExtensibility</b> interface has a single method, <b>GetCustomUI</b>.</para>
      <para />
    </remarks>
    <example>
      <para>In the following example, written in C#, the <b>IRibbonExtensibility</b> interface is specified in the class definition. The procedure then implements the interfaces's only method, <b>GetCustomUI</b>. This method creates an instance of a <b>SteamReader</b> object that reads in the customized markup stored in an external XML file. </para>
      <code>public class Connect : Object, Extensibility.IDTExtensibility2, IRibbonExtensibility 
... 
 
public string GetCustomUI(string RibbonID) 
{ 
 
   StreamReader customUIReader = new System.IO.StreamReader("C:\\RibbonXSampleCS\\customUI.xml"); 
 
   string customUIData = customUIReader.ReadToEnd(); 
 
   return customUIData; 
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName="GetCustomUI">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCustomUI(System::String ^ RibbonID);" />
      <MemberSignature Language="C#" Value="public string GetCustomUI (string RibbonID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomUI([in]string RibbonID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.IRibbonExtensibility.GetCustomUI(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomUI (RibbonID As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GetCustomUI : string -&gt; string" Usage="iRibbonExtensibility.GetCustomUI RibbonID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RibbonID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="RibbonID">To be added.</param>
        <summary>Loads the XML markup, either  from an XML customization file or from XML markup embedded in the procedure, that customizes the Ribbon user interface.</summary>
        <returns>String</returns>
        <remarks>To be added.</remarks>
        <example>
          <para>In the following example, written in C#, the <b>IRibbonExtensibility</b> interface is specified in the class definition. The example then implements the interfaces's only method, <b>GetCustomUI</b>. The method creates an instance of a <b>SteamReader</b> object that reads in the customization markup in an external XML file. </para>
          <code>public class Connect : Object, Extensibility.IDTExtensibility2, IRibbonExtensibility 
... 
 
public string GetCustomUI(string RibbonID) 
{ 
 
   StreamReader customUIReader = new System.IO.StreamReader("C:\\RibbonXSampleCS\\customUI.xml"); 
 
   string customUIData = customUIReader.ReadToEnd(); 
 
   return customUIData; 
}</code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
